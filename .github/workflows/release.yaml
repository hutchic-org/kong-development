---
name: Release

on:  # yamllint disable-line rule:truthy
  pull_request:
  push:
    branches:
    - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      published: ${{ steps.release.outputs.published }}
      release-git-tag: ${{ steps.release.outputs.release-git-tag }}
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        submodules: true
        token: ${{ secrets.GH_TOKEN }}

    - name: Release
      id: release
      uses: ahmadnassri/action-semantic-release@v2.1.10
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-base-artifacts:
    runs-on: ubuntu-latest
    name: Create OSType Artifacts
    strategy:
      matrix:
        architecture: [x86_64]
        ostype: [linux-gnu, linux-musl]
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        submodules: true
        token: ${{ secrets.GH_TOKEN }}

    - name: Log in to the Container registry
      uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - uses: docker/setup-qemu-action@v2

    - uses: docker/setup-buildx-action@v2

    - name: Set environment variables
      run: |
        echo "ARCHITECTURE=${{ matrix.architecture }}" >> $GITHUB_ENV
        echo "OSTYPE=${{ matrix.ostype }}" >> $GITHUB_ENV

    - name: Build
      run: make build-result

    - name: Store the result
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.architecture }}-${{ matrix.ostype }}
        path: build-result/
        retention-days: 1


  build-packages:
    needs: [release, build-base-artifacts]
    name: Create Release Artifacts
    strategy:
      matrix:
        architecture: [x86_64]
        os: [{os: ubuntu, version: rolling, ostype: linux-gnu}, {os: ubuntu, version: 16.04, ostype: linux-gnu}, {os: debian, version: testing, ostype: linux-gnu},
          {os: debian, version: 10, ostype: linux-gnu}, {os: amazonlinux, version: 2, ostype: linux-gnu}, {os: amazonlinux, version: 2022, ostype: linux-gnu},
          {os: rhel, version: 8, ostype: linux-gnu}, {os: alpine, version: 3, ostype: linux-musl}]
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        submodules: true
        token: ${{ secrets.GH_TOKEN }}

    - name: Download the build-result artifact
      uses: actions/download-artifact@v3
      with:
        name: ${{ matrix.architecture }}-${{ matrix.ostype }}

    - name: Log in to the Container registry
      uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - uses: docker/setup-qemu-action@v2

    - uses: docker/setup-buildx-action@v2

    - name: Set environment variables
      run: |
        echo "ARCHITECTURE=${{ matrix.architecture }}" >> $GITHUB_ENV
        echo "REGISTRY=ghcr.io" >> $GITHUB_ENV
        echo "OSTYPE=${{ matrix.os.ostype }}" >> $GITHUB_ENV
        echo "OPERATING_SYSTEM=${{ matrix.os.os }}" >> $GITHUB_ENV
        echo "OPERATING_SYSTEM_VERSION=${{ matrix.os.version }}" >> $GITHUB_ENV

    - name: Build, and Package
      run: make package

    - name: Add Release Artifact to the Github Release
      if: ${{ needs.release.outputs.published == 'true' }}
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ needs.release.outputs.release-git-tag }}
        files: package/*
